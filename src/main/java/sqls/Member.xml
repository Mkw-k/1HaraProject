<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Member">

<!-- <select id="allMember" resultType="bit.com.a.dto.MemberDto">
	SELECT * FROM MEMBER
</select>
 -->
 <!-- 소셜 로그인 관련 mapper -->
 <!-- 소셜 로그인 한 후에 회원 인증 버튼을 누르면 소셜 로그인 api에서 받아온 정보를 데이터 베이스의 member테이블에 저장하도록 하는 쿼리 -->
<!-- <insert id="authentication" parameterType="bit.com.a.dto.MemberDto">
   insert into member (ID, PWD, EMAIL)
   values (#{id}, 0, #{email})
</insert> -->

<select id="getId" parameterType="bit.com.a.dto.MemberDto" resultType="java.lang.Integer">
	SELECT NVL(COUNT(*), 0)
	FROM MEMBER
	WHERE MEMBERID=#{memberid}
</select>

<!-- <insert id="addmember" parameterType="bit.com.a.dto.MemberDto">
	INSERT INTO MEMBER(MEMBERID, PWD, NAME, EMAIL, ADDRESS, DETAILADDRESS, BIRTH, AUTH, USERPIC)
	VALUES(#{memberid}, #{pwd}, #{name}, #{email}, #{address}, #{detailaddress}, #{birth}, 1, 0)
</insert> -->

<select id="login" parameterType="bit.com.a.dto.MemberDto"
	resultType="bit.com.a.dto.MemberDto">
	SELECT MEMBERID, NAME, EMAIL, AUTH, ADDRESS, DETAILADDRESS, BIRTH
	FROM MEMBER
	WHERE MEMBERID=#{memberid} AND PWD=#{pwd}
</select>

<!-- 회원탈퇴 -->
<delete id="memberDelete">
	DELETE FROM MEMBER
	WHERE MEMBERID = #{memberid} AND PWD = #{pwd}
</delete>


<select id="MemberList" resultType="bit.com.a.dto.MemberDto">
	SELECT * FROM MEMBER WHERE MEMBERID NOT IN('admin')
</select>

<delete id="admin_member_forced_evictionCheck">
    DELETE FROM MEMBER
    WHERE MEMBERID=#{memberid}
</delete>



	<!--  뿌려주는것 -->
	<select id="getMypage" parameterType="java.lang.String" resultType="bit.com.a.dto.MemberDto">
	SELECT NAME, EMAIL, ADDRESS, DETAILADDRESS, BIRTH
	FROM MEMBER
	WHERE MEMBERID=#{memberid}
	</select>

	<!-- 회원정보 수정 -->
	<update id="updateMypage">
	UPDATE MEMBER
	SET NAME=#{name}, EMAIL=#{email}, ADDRESS=#{address}, DETAILADDRESs=#{detailaddress}, BIRTH=#{birth}
	WHERE MEMBERID=#{memberid}
	</update>

	<insert parameterType="bit.com.a.dto.MemberDto" id="addmember">
	INSERT INTO MEMBER(MEMBERID, PWD, NAME, EMAIL, ADDRESS, DETAILADDRESS, BIRTH, AUTH)
	VALUES(#{memberid}, #{pwd}, #{name}, #{email}, #{address}, #{detailaddress}, #{birth}, 1) 
	</insert>


</mapper>
